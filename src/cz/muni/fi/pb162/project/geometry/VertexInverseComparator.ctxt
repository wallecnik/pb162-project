#BlueJ class context
comment0.params=vert1\ vert2
comment0.target=int\ compare(Vertex2D,\ Vertex2D)
comment0.text=\n\ Compares\ its\ two\ arguments\ for\ order.\ \ Returns\ a\ negative\ integer,\n\ zero,\ or\ a\ positive\ integer\ as\ the\ first\ argument\ is\ less\ than,\ equal\n\ to,\ or\ greater\ than\ the\ second.<p>\n\ <p/>\n\ In\ the\ foregoing\ description,\ the\ notation\n\ <tt>sgn(</tt><i>expression</i><tt>)</tt>\ designates\ the\ mathematical\n\ <i>signum</i>\ function,\ which\ is\ defined\ to\ return\ one\ of\ <tt>-1</tt>,\n\ <tt>0</tt>,\ or\ <tt>1</tt>\ according\ to\ whether\ the\ value\ of\n\ <i>expression</i>\ is\ negative,\ zero\ or\ positive.<p>\n\ <p/>\n\ The\ implementor\ must\ ensure\ that\ <tt>sgn(compare(x,\ y))\ \=\=\n\ -sgn(compare(y,\ x))</tt>\ for\ all\ <tt>x</tt>\ and\ <tt>y</tt>.\ \ (This\n\ implies\ that\ <tt>compare(x,\ y)</tt>\ must\ throw\ an\ exception\ if\ and\ only\n\ if\ <tt>compare(y,\ x)</tt>\ throws\ an\ exception.)<p>\n\ <p/>\n\ The\ implementor\ must\ also\ ensure\ that\ the\ relation\ is\ transitive\:\n\ <tt>((compare(x,\ y)&gt;0)\ &amp;&amp;\ (compare(y,\ z)&gt;0))</tt>\ implies\n\ <tt>compare(x,\ z)&gt;0</tt>.<p>\n\ <p/>\n\ Finally,\ the\ implementor\ must\ ensure\ that\ <tt>compare(x,\ y)\=\=0</tt>\n\ implies\ that\ <tt>sgn(compare(x,\ z))\=\=sgn(compare(y,\ z))</tt>\ for\ all\n\ <tt>z</tt>.<p>\n\ <p/>\n\ It\ is\ generally\ the\ case,\ but\ <i>not</i>\ strictly\ required\ that\n\ <tt>(compare(x,\ y)\=\=0)\ \=\=\ (x.equals(y))</tt>.\ \ Generally\ speaking,\n\ any\ comparator\ that\ violates\ this\ condition\ should\ clearly\ indicate\n\ this\ fact.\ \ The\ recommended\ language\ is\ "Note\:\ this\ comparator\n\ imposes\ orderings\ that\ are\ inconsistent\ with\ equals."\n\n\ @param\ vert1\ the\ first\ object\ to\ be\ compared.\n\ @param\ vert2\ the\ second\ object\ to\ be\ compared.\n\ @return\ a\ negative\ integer,\ zero,\ or\ a\ positive\ integer\ as\ the\n\ first\ argument\ is\ less\ than,\ equal\ to,\ or\ greater\ than\ the\n\ second.\n\ @throws\ NullPointerException\ if\ an\ argument\ is\ null\ and\ this\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ comparator\ does\ not\ permit\ null\ arguments\n\ @throws\ ClassCastException\ \ \ if\ the\ arguments'\ types\ prevent\ them\ from\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ being\ compared\ by\ this\ comparator.\n
numComments=1
